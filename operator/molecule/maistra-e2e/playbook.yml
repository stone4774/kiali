- name: Tests
  hosts: localhost
  connection: local
  tasks:
  - import_tasks: 'tests/tasks.yml'

  - name: Assert Kialis have the list accessible namespaces compatible with Service Mesh Member Rolls
    assert:
      that:
      - "{{ item.0.deployment.accessible_namespaces }} | difference({{ item.1.resources[0].spec.members }}) | length == 1"
    with_together:
    - "{{ kiali_configurations }}"
    - "{{ smmrs.results }}"
  
  - name: Assert Kialis Configmaps have OAuth Strategy
    assert:
      that:
      - "item.auth.strategy == auth "
    with_items:
    - "{{ kiali_configurations }}"
    vars:
      auth: "openshift"

  - name: Assert Kialis Configmaps have the same image version that was defined on Service Mesh Control Plane
    assert:
      that:
      - item.0.deployment.image_version ==  item.1.resources[0].spec.istio.kiali.tag
    with_together:
    - "{{ kiali_configurations }}"
    - "{{ smcps.results }}"


  - name: Assert Kiali Configmap  Namespaces are correct to Service Mesh Control Plane Namespace
    assert:
      that:
      - item.0.istio_namespace == item.1.resources[0].metadata.namespace
    with_together:
    - "{{ kiali_configurations }}"
    - "{{ smcps.results }}"
 

  - name: Assert Kiali Pods are running on correct Service Mesh Control Plane
    assert:
      that:
      - item.0.resources[0].metadata.namespace == item.1.resources[0].metadata.namespace
    with_together:
    - "{{ kiali_pods.results }}"
    - "{{ smcps.results }}"

  - name: Assert Kialis Configmaps have correct prometheus url
    assert:
      that:
      - "'{{ item.0.external_services.prometheus.custom_metrics_url }}' == 'https://prometheus.{{ item.1.resources[0].metadata.namespace }}.svc:9090'"
    with_together:
    - "{{ kiali_configurations }}"
    - "{{ smcps.results }}"

  - name: Assert Kialis Configmaps have correct grafana url
    assert:
      that:
      - "'{{ item.0.external_services.grafana.in_cluster_url }}' == 'https://grafana.{{ item.1.resources[0].metadata.namespace }}.svc:3000'" 
      - "{{ item.1.resources[0].spec.istio.grafana.enabled }} == true "
    with_together:
    - "{{ kiali_configurations }}"
    - "{{ smcps.results }}"

  
  - name: Assert Kialis Configmaps have correct Service Mesh Pilot Urls
    assert:
      that:
      - "'{{ item.0.external_services.istio.url_service_version }}' == 'http://istio-pilot.{{ item.1.resources[0].metadata.namespace }}:8080/version'" 
    with_together:
    - "{{ kiali_configurations }}"
    - "{{ smcps.results }}"

  - name: Assert Kialis Configmaps have correct Label Selector
    assert:
      that:
      - item.0.api.namespaces.label_selector is defined
      - "'{{ item.0.api.namespaces.label_selector }}' == 'kiali.io/member-of={{ item.1.resources[0].metadata.namespace }}'" 
    with_together:
    - "{{ kiali_configurations }}"
    - "{{ smcps.results }}"

  

  - name: Assert that namespaces have the correct Kiali roles
    assert:
      that: "{{ item.resources | length == 1 }}"
    with_items:
    - "{{ kiali_roles.results }}"


  - name: Assert the role binding provides the read-only viewer role for Kiali
    assert:
      that:
      - "{{ item.resources[0] | default({}) | json_query('roleRef.name') == 'kiali' }}"
      fail_msg: "The kiali role binding did not have the read-only roleref 'kiali'"
    with_items:
    - "{{ kiali_rolebindings.results }}"